---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: bazarr
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      bazarr:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/bazarr
              tag: 1.5.2@sha256:4bd7e1cb1743949729cde6394e1e9eacc63727436c39e332b9d59345a9492913
            env:
              BAZARR__LOG_LEVEL: info
              BAZARR__THEME: dark
              TZ: ${TIMEZONE}
            envFrom:
              - secretRef:
                  name: bazarr-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: &port 6767
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext: &securityContext
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: [ALL] }
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 1Gi
          subcleaner:
            image:
              repository: registry.k8s.io/git-sync/git-sync
              tag: v4.4.0@sha256:0330739a707a2969d617e859f096659ab6d149212658ac0ad7e550b59482ebf0
            env:
              GITSYNC_REPO: https://github.com/KBlixt/subcleaner
              GITSYNC_REF: master
              GITSYNC_PERIOD: 24h
              GITSYNC_ROOT: /subcleaner
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 128Mi
            securityContext: *securityContext
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [44, 10000]
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: bazarr
        ports:
          http:
            port: *port
    ingress:
      app:
        className: internal
        # annotations:
        #   gethomepage.dev/enabled: "true"
        #   gethomepage.dev/group: Downloads
        #   gethomepage.dev/name: Bazarr
        #   gethomepage.dev/icon: bazarr.png
        #   gethomepage.dev/description: Subtitle Downloads
        #   gethomepage.dev/widget.type: bazarr
        #   gethomepage.dev/widget.url: http://bazarr.media.svc.cluster.local:6767
        #   gethomepage.dev/widget.key: "{{ `{{HOMEPAGE_VAR_BAZARR_TOKEN}}` }}"
        hosts:
          - host: "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http
          - host: "{{ .Release.Name }}.${SECRET_INTERNAL_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      subcleaner:
        type: emptyDir
      cache:
        type: emptyDir
        globalMounts:
          - path: /config/cache
      config:
        existingClaim: bazarr
      add-ons:
        enabled: true
        type: emptyDir
        globalMounts:
          - path: /add-ons
      tv:
        type: nfs
        server: ${SECRET_STORAGE_SERVER}
        path: ${SECRET_STORAGE_SERVER_TV_NFS}
        globalMounts:
          - path: /tv
            readOnly: true
      movies:
        type: nfs
        server: ${SECRET_STORAGE_SERVER}
        path: ${SECRET_STORAGE_SERVER_MOVIES_NFS}
        globalMounts:
          - path: /movies
            readOnly: true
      tv4k:
        type: nfs
        server: ${SECRET_STORAGE_SERVER}
        path: ${SECRET_STORAGE_SERVER_TV4K_NFS}
        globalMounts:
          - path: /tv4k
            readOnly: true
      movies4k:
        type: nfs
        server: ${SECRET_STORAGE_SERVER}
        path: ${SECRET_STORAGE_SERVER_MOVIES4K_NFS}
        globalMounts:
          - path: /movies4k
            readOnly: true
      scripts:
        type: configMap
        name: bazarr-scripts
        defaultMode: 0775
        globalMounts:
          - path: /scripts/subcleaner.sh
            subPath: subcleaner.sh
            readOnly: true
      tmp:
        type: emptyDir
