---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: jellyfin
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: jellyfin
  values:
    controllers:
      jellyfin:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/jellyfin/jellyfin
              tag: 10.11.1
            env:
              TZ: "${TIMEZONE}"
              NVIDIA_VISIBLE_DEVICES: "all"
              NVIDIA_DRIVER_CAPABILITIES: "all"
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: &port 8096
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 10
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: {drop: ["ALL"]}
            resources:
              requests:
                cpu: 100m
                memory: 1Gi
                nvidia.com/gpu: 1
              limits:
                nvidia.com/gpu: 1
                memory: 8Gi
    defaultPodOptions:
      runtimeClassName: nvidia
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: extensions.talos.dev/nvidia-open-gpu-kernel-modules-production
                    operator: Exists
                  - key: extensions.talos.dev/nvidia-container-toolkit-production
                    operator: Exists
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups:
          - 44
          - 10000
        seccompProfile: {type: RuntimeDefault}
    service:
      app:
        controller: jellyfin
        ports:
          http:
            port: *port
    route:
      app:
        hostnames:
          - "{{ .Release.Name }}.${SECRET_DOMAIN}"
          - "{{ .Release.Name }}.${SECRET_INTERNAL_DOMAIN}"
        parentRefs:
          - name: envoy-internal
            namespace: network
    persistence:
      config:
        existingClaim: jellyfin
      config-cache:
        existingClaim: jellyfin-cache
        globalMounts:
          - path: /config/metadata
          - path: /config/data
      config-logs:
        type: emptyDir
        globalMounts:
          - path: /config/log
      transcode:
        type: emptyDir
        globalMounts:
          - path: /config/transcodes
      tmp:
        type: emptyDir
      tv:
        type: nfs
        server: ${SECRET_STORAGE_SERVER}
        path: ${SECRET_STORAGE_SERVER_TV_NFS}
        globalMounts:
          - path: /tv
            readOnly: true
      movies:
        type: nfs
        server: ${SECRET_STORAGE_SERVER}
        path: ${SECRET_STORAGE_SERVER_MOVIES_NFS}
        globalMounts:
          - path: /movies
            readOnly: true
      tv4k:
        type: nfs
        server: ${SECRET_STORAGE_SERVER}
        path: ${SECRET_STORAGE_SERVER_TV4K_NFS}
        globalMounts:
          - path: /tv4k
            readOnly: true
      movies4k:
        type: nfs
        server: ${SECRET_STORAGE_SERVER}
        path: ${SECRET_STORAGE_SERVER_MOVIES4K_NFS}
        globalMounts:
          - path: /movies4k
            readOnly: true
