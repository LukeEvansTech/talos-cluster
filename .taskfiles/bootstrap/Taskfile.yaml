---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: '3'

tasks:

  talos:
    desc: Bootstrap the Talos cluster
    dir: '{{.TALOS_DIR}}'
    cmds:
      - '[ -f talsecret.sops.yaml ] || talhelper gensecret | sops --filename-override talos/talsecret.sops.yaml --encrypt /dev/stdin > talsecret.sops.yaml'
      - talhelper genconfig
      - talhelper gencommand apply --extra-flags="--insecure" | bash
      - until talhelper gencommand bootstrap | bash; do sleep 10; done
      - until talhelper gencommand kubeconfig --extra-flags="{{.ROOT_DIR}} --force" | bash; do sleep 10; done
    preconditions:
      - test -f {{.ROOT_DIR}}/.sops.yaml
      - test -f {{.SOPS_AGE_KEY_FILE}}
      - test -f {{.TALOS_DIR}}/talconfig.yaml
      - which talhelper talosctl sops

  secrets:
      desc: Creates required secrets for cluster
      cmd: minijinja-cli "{{.ROOT_DIR}}/bootstrap/secrets.yaml.tpl" | op inject | kubectl apply -f -
      preconditions:
        - test -f {{.ROOT_DIR}}/kubeconfig
        - test -f {{.ROOT_DIR}}/bootstrap/secrets.yaml.tpl
        - op user get --me | read -r _ && echo "true" || echo "false"

  apps:
    desc: Bootstrap apps into the Talos cluster
    cmd: bash {{.SCRIPTS_DIR}}/bootstrap-apps.sh
    preconditions:
      - msg: Unsupported bash version, run `brew install bash` to upgrade
        sh: '{{if eq OS "darwin"}}test -f /opt/homebrew/bin/bash{{end}}'
      - msg: ROOK_DISK environment variable is not set. Please set it with 'export ROOK_DISK="INTEL SSDPE21D015TA"' or similar.
        sh: '[ ! -z "${ROOK_DISK}" ]'
      - test -f {{.KUBECONFIG}}
      - test -f {{.ROOT_DIR}}/.sops.yaml
      - test -f {{.SCRIPTS_DIR}}/bootstrap-apps.sh
      - test -f {{.SOPS_AGE_KEY_FILE}}

  # NOTE: Nodes must all be part of the Ceph cluster and Ceph disks must share the same disk model
  rook:
    desc: Bootstrap Rook-Ceph [MODEL=required]
    cmds:
      - minijinja-cli {{.ROOT_DIR}}/bootstrap/wipe-rook.yaml.j2 | kubectl apply --server-side --filename -
      - until kubectl --namespace default get job/wipe-rook-* &>/dev/null; do sleep 5; done
      - for node in $(echo "{{.NODE_NAMES}}" | tr ' ' ' '); do kubectl --namespace default wait job/wipe-rook-$node --for=condition=complete --timeout=5m; done
      - stern --namespace default -l app.kubernetes.io/name=wipe-rook --no-follow
      - kubectl --namespace default delete job -l app.kubernetes.io/name=wipe-rook
    env:
      MODEL: '{{.MODEL}}'
      NODE_COUNT:
        sh: talosctl config info --output json | jq --raw-output '.nodes | length'
      NODE_NAMES:
        sh: kubectl get nodes -o jsonpath='{.items[*].metadata.name}'
    requires:
      vars: [MODEL]
    preconditions:
      - test -f {{.ROOT_DIR}}/bootstrap/wipe-rook.yaml.j2
      - which kubectl minijinja-cli stern talosctl
